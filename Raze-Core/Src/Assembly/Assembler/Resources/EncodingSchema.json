{
  "ADD": [
    {
      "Instruction": "ADD RM8, IMM8",
      "EncodingType": "RexPrefix | NoUpper8BitEncoding",
      "OpCode": 128
    },
    {
      "Instruction": "ADD RM8, R8",
      "OpCode": 0
    },
    {
      "Instruction": "ADD RM8, R8",
      "EncodingType": "RexPrefix | NoUpper8BitEncoding",
      "OpCode": 0
    },
    {
      "Instruction": "ADD RM64, R64",
      "EncodingType": "RexWPrefix",
      "OpCode": 1
    },
    {
      "Instruction": "ADD RM16, IMM8",
      "EncodingType": "SizePrefix | SignExtends",
      "OpCode": 131
    },
    {
      "Instruction": "ADD RM16, IMM16",
      "EncodingType": "SizePrefix",
      "OpCode": 129
    },
    {
      "Instruction": "ADD AL, IMM8",
      "EncodingType": "NoModRegRM",
      "OpCode": 4
    },
    {
      "Instruction": "ADD AX, IMM16",
      "EncodingType": "SizePrefix | NoModRegRM",
      "OpCode": 5
    },
    {
      "Instruction": "ADD EAX, IMM32",
      "EncodingType": "NoModRegRM",
      "OpCode": 5
    },
    {
      "Instruction": "ADD RAX, IMM32",
      "EncodingType": "RexWPrefix | NoModRegRM",
      "OpCode": 5
    },
    {
      "Instruction": "ADD RM32, R32",
      "OpCode": 1
    }
  ],
  "SUB": [
    {
      "Instruction": "SUB RM64, IMM32",
      "EncodingType": "RexWPrefix",
      "OpCodeExtension": 5,
      "OpCode": 129
    }
  ],
  "MOV": [
    {
      "Instruction": "MOV EAX, MOFFS32",
      "EncodingType": "NoModRegRM",
      "OpCode": 161
    },
    {
      "Instruction": "MOV MOFFS32, EAX",
      "EncodingType": "NoModRegRM",
      "OpCode": 163
    },
    {
      "Instruction": "MOV RM64, IMM8",
      "EncodingType": "RexWPrefix",
      "OpCode": 136
    },
    {
      "Instruction": "MOV RM16, R16",
      "EncodingType": "SizePrefix",
      "OpCode": 137
    },
    {
      "Instruction": "MOV RM32, R32",
      "OpCode": 137
    },
    {
      "Instruction": "MOV RM64, R64",
      "EncodingType": "RexWPrefix",
      "OpCode": 137
    },
    {
      "Instruction": "MOV M8, IMM8",
      "OpCodeExtension": 0,
      "OpCode": 198
    },
    {
      "Instruction": "MOV M16, IMM16",
      "OpCodeExtension": 0,
      "EncodingType": "SizePrefix",
      "OpCode": 199
    },
    {
      "Instruction": "MOV M32, IMM32",
      "OpCodeExtension": 0,
      "OpCode": 199
    },
    {
      "Instruction": "MOV M64, IMM32",
      "OpCodeExtension": 0,
      "EncodingType": "RexWPrefix",
      "OpCode": 199
    },

    {
      "Instruction": "MOV RM64, IMM32",
      "EncodingType": "RexWPrefix | SignExtends",
      "OpCode": 199
    },
    {
      "Instruction": "MOV RM32, IMM32",
      "EncodingType": "AddRegisterToOpCode | NoModRegRM",
      "OpCode": 184
    },
    {
      "Instruction": "MOV RM16, IMM16",
      "EncodingType": "SizePrefix",
      "OpCode": 199
    },
    {
      "Instruction": "MOV RM64, R64",
      "EncodingType": "RexWPrefix",
      "OpCode": 137
    },
    {
      "Instruction": "MOV RM64, IMM64",
      "EncodingType": "RexWPrefix | NoModRegRM | AddRegisterToOpCode",
      "OpCode": 184
    }
  ],
  "PUSH": [
    {
      "Instruction": "PUSH IMM32",
      "OpCode": 104
    },
    {
      "Instruction": "PUSH R64",
      "EncodingType": "AddRegisterToOpCode | NoModRegRM",
      "OpCode": 80
    }
  ],
  "POP": [
    {
      "Instruction": "POP R64",
      "EncodingType": "AddRegisterToOpCode | NoModRegRM",
      "OpCode": 88
    }
  ],
  "CALL": [
    {
      "Instruction": "CALL IMM32",
      "EncodingType": "RelativeJump",
      "OpCode": 232
    }
  ],
  "JMP": [
    {
      "Instruction": "JMP IMM8",
      "EncodingType": "RelativeJump",
      "OpCode": 235
    },
    {
      "Instruction": "JMP IMM32",
      "EncodingType": "RelativeJump",
      "OpCode": 233
    }
  ],
  "INC": [
    {
      "Instruction": "INC R64",
      "EncodingType": "RexWPrefix",
      "OpCodeExtension": 0,
      "OpCode": 255
    }
  ],
  "SYSCALL": [
    {
      "Instruction": "SYSCALL",
      "EncodingType": "ExpansionPrefix",
      "OpCode": 5
    }
  ],
  "RET": [
    {
      "Instruction": "RET",
      "OpCode": 195
    }
  ],
  "LEAVE": [
    {
      "Instruction": "LEAVE",
      "OpCode": 201
    }
  ],
  "ADDSS": [
    {
      "Instruction": "ADDSS XMM, XMM",
      "EncodingType": "ExpansionPrefix | ScalarFloatingPrefix",
      "OpCode": 88
    }
  ]
}
