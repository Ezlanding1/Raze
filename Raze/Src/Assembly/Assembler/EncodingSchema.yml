# OperandType:
  # P = Prefixed Register (SIL, DIL, BPL, SPL)
  # P = Prefixed Register 8 bit

  # A = A-Register
  # AL/AX/EAX/RAX = A-Register 8/16/32/64 bit

  # R = Register
  # R8U/R8/R16/R32/R64 = Register 8U/8/16/32/64 bit

  # M = Memory
  # M8U/M8/M16/M32/M64 = Memory 8U/8/16/32/64 bit

  # IMM = Immediate
  # IMM8U/IMM8/IMM16/IMM32/IMM64 = Immediate 8U/8/16/32/64 bit

  # RM = Register/Memory
  # RM8U/RM8/RM16/RM32/RM64 = Register/Memory 8U/8/16/32/64 bit

# EncodingTypes:
  # RexPrefix = Emit REX Prefix (0b01000000)
  # RexWPrefix = Emit REX Prefix with the W bit set (0b01001000)
  # ExpansionPrefix = Emit Expansion Prefix (0x0F)
  # SizePrefix = Emit Size Prefix (0x66)
  # NoModRegRM = Do not emit ModRegRM byte when operand1 is a register (R), and operand2 is an immediate (IMM)
  # SignExtends = Indicates that the immediate (IMM) operand2 will be sign extended. Will only match if MSB is 0
  # Any combination of these flags can be encoded by separating two EncodingTypes with bitwise or '|' or comma ','
  
ADD:
- Instruction: ADD R8U, IMM8
  OpCode: 128
- Instruction: ADD P, IMM8
  EncodingType: RexPrefix
  OpCode: 128

- Instruction: ADD RM8, R8
  OpCode: 0
- Instruction: ADD RM64, R64
  EncodingType: RexWPrefix
  OpCode: 1

- Instruction: ADD RM16, IMM8
  EncodingType: SizePrefix | SignExtends
  OpCode: 131
- Instruction: ADD RM16, IMM16
  EncodingType: SizePrefix
  OpCode: 129

- Instruction: ADD AL, IMM8
  EncodingType: NoModRegRM
  OpCode: 4
- Instruction: ADD AX, IMM16
  EncodingType: SizePrefix | NoModRegRM
  OpCode: 5
- Instruction: ADD EAX, IMM32
  EncodingType: NoModRegRM
  OpCode: 5
- Instruction: ADD RAX, IMM32
  EncodingType: RexWPrefix | NoModRegRM
  OpCode: 5


MOV:
- Instruction: MOV RM8, R8
  OpCode: 136
- Instruction: MOV RM16, R16
  EncodingType: SizePrefix
  OpCode: 137
- Instruction: MOV RM32, R32
  OpCode: 137
- Instruction: MOV RM64, R64
  EncodingType: RexWPrefix
  OpCode: 137

- Instruction: MOV M8, IMM8
  OpCodeExtension: 0
  OpCode: 0xC6
- Instruction: MOV M16, IMM16
  OpCodeExtension: 0
  EncodingType: SizePrefix
  OpCode: 0xC7
- Instruction: MOV M32, IMM32
  OpCodeExtension: 0
  OpCode: 0xC7
- Instruction: MOV M64, IMM32
  OpCodeExtension: 0
  EncodingType: RexWPrefix
  OpCode: 0xC7

- Instruction: MOV RM64, IMM32
  EncodingType: RexWPrefix
  OpCode: 0xC7
- Instruction: MOV RM16, IMM16
  EncodingType: SizePrefix
  OpCode: 0xC7
- Instruction: MOV RM64, R64
  EncodingType: RexWPrefix
  OpCode: 0x89


PUSH:
- Instruction: PUSH IMM32
  OpCode: 104

- Instruction: PUSH R64
  EncodingType: AddRegisterToOpCode | NoModRegRM
  OpCode: 80


INC:
- Instruction: INC R64
  EncodingType: RexWPrefix
  OpCodeExtension: 0
  OpCode: 255